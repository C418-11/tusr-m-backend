# -*- coding: utf-8 -*-


from collections.abc import Callable
from dataclasses import dataclass

from flask import Flask
from mypy_extensions import NamedArg

from .bp import bp
from ...models.data import FamilyDifficultyType


def initialize_hooks(_app: Flask) -> None:
    ...


def initialize_setup() -> None:
    from flask_sqlalchemy.model import Model

    from ...extensions import db
    from ...models.data import CertificateType
    from ...models.data import PreviousEducationLevel
    from ...models.data import EthnicGroup
    from ...models.data import Gender
    from ...models.data import StudentOrigin
    from ...models.data import StudentCategory
    from ...models.data import PoliticalStatus
    from ...models.data import HouseholdType
    from ...models.data import HouseholdArea
    from ...models.data import EnrollmentQuarter
    from ...models.data import TrainingLevel
    from ...models.data import EducationSystem
    from ...models.data import StudentStatus
    from ...models.data import StudyMode
    from ...models.data import OriginalRank
    from ...models.data import RetireType
    from ...models.data import HealthStatus
    from ...models.data import FinancialAidType
    from ...models.data import Nationality

    type ModelType = Callable[[NamedArg(str, "name")], Model]  # noqa: F821

    # noinspection PyPep8Naming
    ENUM_DATA = (
        ("证件类型", CertificateType, [
            "01.身份证",
            "05.军官证",
            "10.护照",
            "15.港澳台身份证",
            "20.其他",
            "25.港澳台居民居住证",
            "30.香港居民身份证",
            "35.澳门居民身份证",
            "40.台湾居民身份证",
        ]),
        ("性别", Gender, ["1.男", "2.女"]),
        ("民族", EthnicGroup, [
            "01.汉族",
            "02.蒙古族",
            "03.回族",
            "04.藏族",
            "05.维吾尔族",
            "06.苗族",
            "07.彝族",
            "08.壮族",
            "09.布依族",
            "10.朝鲜族",
            "11.满族",
            "12.侗族",
            "13.瑶族",
            "14.白族",
            "15.土家族",
            "16.哈尼族",
            "17.哈萨克族",
            "18.傣族",
            "19.黎族",
            "20.傈傈族",
            "21.佤族",
            "22.畲族",
            "23.高山族",
            "24.拉祜族",
            "25.水族",
            "26.东乡族",
            "27.纳西族",
            "28.景颇族",
            "29.柯尔克孜族",
            "30.土族",
            "31.达翰尔族",
            "32.仫佬族",
            "33.羌族",
            "34.布朗族",
            "35.撒拉族",
            "36.毛南族",
            "37.仡佬族",
            "38.锡伯族",
            "39.阿昌族",
            "40.普米族",
            "41.塔吉克族",
            "42.怒族",
            "43.乌孜别克族",
            "44.俄罗斯族",
            "45.鄂温克族",
            "46.德昂族",
            "47.保安族",
            "48.裕固族",
            "49.京族",
            "50.塔塔尔族",
            "51.独龙族",
            "52.鄂伦春族",
            "53.赫哲族",
            "54.门巴族",
            "55.珞巴族",
            "56.基诺族",
            "57.穿青人",
            "90.外籍人士"
        ]),
        ("以前学历", PreviousEducationLevel, [
            "11.博士",
            "12.硕士",
            "21.本科",
            "31.专科",
            "40.中专",
            "50.技校",
            "61.高中",
            "62.高技",
            "70.初中",
            "80.小学",
            "90.文盲或半文盲"
        ]),
        ("生源地", StudentOrigin, [
            "深圳市", "广东省内(深圳市外)", "广东省外"
        ]),
        ("学生类别", StudentCategory, [
            "01.应届毕业", "05.在职人员", "10.非在职人员", "15.退役士兵"
        ]),
        ("政治面貌", PoliticalStatus, [
            "01.中国共产党党员",
            "02.中国共产党预备党员",
            "03.中国共产主义青年团团员",
            "04.中国国民党革命委员会会员",
            "05.中国民主同盟盟员",
            "06.中国民主建国会会员",
            "07.中国民主促进会会员",
            "08.中国农工党党员",
            "09.中国致公党党员",
            "10.九三学社社员",
            "11.台湾民主自治同盟盟员",
            "12.无党派民主人士",
            "13.群众"
        ]),
        ("户口类型", HouseholdType, [
            "11.农村", "12.县镇", "21.城市", "30.港澳台", "40.外国籍"
        ]),
        ("户口所在地", HouseholdArea, [
            "11.本市", "12.非本市", "21.省外", "22.港澳台", "30.国外"
        ]),
        ("招生季度", EnrollmentQuarter, [
            "1.春季", "2.秋季"
        ]),
        ("培养层次", TrainingLevel, [
            "初级", "中级", "高级", "预备技师", "技师"
        ]),
        ("学制", EducationSystem, [
            "二年", "三年", "四年", "五年", "六年",
        ]),
        ("学生状态", StudentStatus, [
            "01.在校", "05.休学", "10.转入", "15.转出", "20.退学", "25.复学", "30.留级", "35.开除", "40.肄业",
            "45.毕业", "50.结业"
        ]),
        ("学习形式", StudyMode, [
            "01.全日制", "05.非全日制"
        ]),
        ("原军衔", OriginalRank, [
            "01.列兵", "02.上等兵", "03.一级士官", "04.二级士官", "05.三级士官", "06.四级士官"
        ]),
        ("退役方式", RetireType, [
            "01.退伍义务兵", "02.复员士官", "03.转业士官"
        ]),
        ("健康状况", HealthStatus, [
            "01.健康或良好",
            "02.一般或较弱",
            "03.有病",
            "04.有生理缺陷",
            "05.有残疾",
            "09.其他"
        ]),
        ("资助申请类型", FinancialAidType, [
            "都申请",
            "都不申请",
            "只申请助学金",
            "只申请免学费",
        ]),
        ("国籍", Nationality, [
            "1.中国",
            "2.中国香港",
            "3.中国澳门",
            "4.中国台湾",
            "5.奥兰群岛",
            "6.阿尔巴尼亚",
            "7.安道尔",
            "8.荷属安地列斯群岛",
            "9.阿拉伯联合酋长国",
            "10.阿根廷",
            "11.亚美尼亚",
            "12.美属萨摩亚",
            "13.南极洲",
            "14.法属南部领地",
            "15.安提瓜岛与巴布达岛",
            "16.澳大利亚",
            "17.奥地利",
            "18.阿塞拜疆",
            "19.布隆迪",
            "20.比利时",
            "21.贝宁",
            "22.布基纳法索",
            "23.孟加拉国",
            "24.保加利亚",
            "25.巴林群岛",
            "26.巴哈马群岛",
            "27.波斯尼亚与黑塞哥维那",
            "28.白俄罗斯",
            "29.伯利兹",
            "30.百慕大群岛",
            "31.玻利维亚",
            "32.巴西",
            "33.巴巴多斯岛",
            "34.文莱",
            "35.不丹",
            "36.博维特岛",
            "37.博茨瓦纳",
            "38.中非共和国",
            "39.加拿大",
            "40.科科斯群岛",
            "41.瑞士",
            "42.智利",
            "43.阿鲁巴岛",
            "44.科特迪瓦",
            "45.喀麦隆",
            "46.刚果（金）",
            "47.刚果",
            "48.库克群岛",
            "49.哥伦比亚",
            "50.科摩罗",
            "51.佛得角",
            "52.哥斯达黎加",
            "53.古巴",
            "54.圣诞岛",
            "55.开曼群岛",
            "56.塞浦路斯",
            "57.捷克共和国",
            "58.德国",
            "59.吉布提",
            "60.多米尼加",
            "61.丹麦",
            "62.多米尼加共和国",
            "63.阿尔及尔",
            "64.厄瓜多尔",
            "65.埃及",
            "66.厄立特里亚",
            "67.西撒哈拉",
            "68.西班牙",
            "69.爱沙尼亚",
            "70.埃塞俄比亚",
            "71.芬兰",
            "72.斐济",
            "73.法国",
            "74.法罗群岛",
            "75.密克罗尼西亚",
            "76.加蓬",
            "77.英国",
            "78.乔治亚州",
            "79.格恩西岛",
            "80.加纳",
            "81.直布罗陀",
            "82.几内亚",
            "83.瓜德罗普岛",
            "84.冈比亚",
            "85.几内亚比绍",
            "86.赤道几内亚",
            "87.希腊",
            "88.格林纳达",
            "89.格陵兰",
            "90.危地马拉",
            "91.法属圭亚那",
            "92.关岛",
            "93.圭亚那",
            "94.阿富汗",
            "95.赫德和麦克唐纳群岛",
            "96.洪都拉斯",
            "97.克罗地亚",
            "98.海地",
            "99.匈牙利",
            "100.印度尼西亚",
            "101.曼恩岛",
            "102.印度",
            "103.英属印度洋领地",
            "104.爱尔兰",
            "105.伊朗",
            "106.伊拉克",
            "107.冰岛",
            "108.以色列",
            "109.意大利",
            "110.牙买加",
            "111.泽西岛",
            "112.约旦",
            "113.日本",
            "114.哈萨克斯坦",
            "115.肯尼亚",
            "116.吉尔吉斯斯坦",
            "117.柬埔寨",
            "118.基里巴斯",
            "119.福克兰群岛",
            "120.圣基茨和尼维斯",
            "121.韩国",
            "122.科威特",
            "123.老挝",
            "124.黎巴嫩",
            "125.利比里亚",
            "126.利比亚",
            "127.圣卢西亚岛",
            "128.列支敦士登",
            "129.斯里兰卡",
            "130.莱索托",
            "131.立陶宛",
            "132.卢森堡",
            "133.拉脱维亚",
            "134.安哥拉",
            "135.摩洛哥",
            "136.摩纳哥",
            "137.摩尔多瓦",
            "138.马达加斯加岛",
            "139.马尔代夫",
            "140.墨西哥",
            "141.马绍尔群岛",
            "142.马其顿",
            "143.马里",
            "144.马耳他",
            "145.缅甸",
            "146.黑山",
            "147.蒙古",
            "148.北马里亚纳群岛自由联邦",
            "149.莫桑比克",
            "150.毛利塔尼亚",
            "151.蒙特塞拉特岛",
            "152.马提尼克岛",
            "153.毛里求斯",
            "154.马拉维",
            "155.马来西亚",
            "156.马约特岛",
            "157.纳米比亚",
            "158.新喀里多尼亚",
            "159.尼日尔",
            "160.诺福克岛",
            "161.尼日利亚",
            "162.尼加拉瓜",
            "163.纽埃岛",
            "164.荷兰",
            "165.挪威",
            "166.尼泊尔",
            "167.瑙鲁",
            "168.新西兰",
            "169.阿曼",
            "170.巴基斯坦",
            "171.巴拿马",
            "172.皮特克恩岛",
            "173.秘鲁",
            "174.菲律宾",
            "175.帕劳岛",
            "176.巴布亚新几内亚",
            "177.波兰",
            "178.波多黎各",
            "179.朝鲜",
            "180.葡萄牙",
            "181.巴拉圭",
            "182.巴勒斯坦",
            "183.法属波利尼西亚",
            "184.卡塔尔",
            "185.留尼旺岛",
            "186.罗马尼亚",
            "187.俄国",
            "188.卢旺达",
            "189.沙特阿拉伯",
            "190.苏丹",
            "191.塞内加尔",
            "192.新加坡",
            "193.南乔治亚岛和南桑威奇群岛",
            "194.圣赫勒拿岛",
            "195.斯瓦尔巴岛和扬马延岛",
            "196.所罗门群岛",
            "197.塞拉利昂",
            "198.萨尔瓦多",
            "199.圣马力诺",
            "200.索马里",
            "201.圣皮埃尔和密克隆岛",
            "202.塞尔维亚和黑山",
            "203.圣多美和普林西比",
            "204.苏里南",
            "205.斯洛伐克",
            "206.斯洛文尼亚",
            "207.瑞典",
            "208.斯威士兰",
            "209.塞舌尔",
            "210.叙利亚",
            "211.特克斯和凯科斯群岛",
            "212.乍得",
            "213.多哥",
            "214.泰国",
            "215.塔吉克斯坦",
            "216.托克劳群岛",
            "217.土库曼斯坦",
            "218.东帝汶",
            "219.汤加",
            "220.特立尼达和多巴哥",
            "221.突尼斯",
            "222.土耳其",
            "223.图瓦卢",
            "224.安圭拉",
            "225.坦桑尼亚",
            "226.乌干达",
            "227.乌克兰",
            "228.美属萨摩亚",
            "229.乌拉圭",
            "230.美国",
            "231.乌兹别克斯坦",
            "232.梵蒂冈",
            "233.圣文森特和格林纳丁斯群岛",
            "234.委内瑞拉",
            "235.维尔京群岛（英属）",
            "236.维尔京群岛（美属）",
            "237.越南",
            "238.瓦努阿图",
            "239.瓦利斯群岛和富图纳群岛",
            "240.萨摩亚群岛",
            "241.也门",
            "242.南非",
            "243.赞比亚",
            "244.津巴布韦",
        ]),
        ("家庭困难类型", FamilyDifficultyType, [
            "建档立卡家庭",
            "低保家庭",
            "特困供养",
            "孤残学生",
            "烈士子女",
            "残疾或残疾人子女",
            "其他",
        ])
    )

    @dataclass
    class EnumData:
        name: str
        model: ModelType
        types: list[str]

    def add_enum(data: EnumData) -> None:
        for t in data.types:
            print(f"添加{data.name}： {t}")
            # noinspection PyArgumentList
            db.session.add(data.model(name=t))
            db.session.commit()

    print("正在初始化基础数据")
    for (name, model, types) in ENUM_DATA:
        print()
        add_enum(EnumData(name=name, model=model, types=types))
    print()
    print("初始化基础数据成功")


__all__ = ("bp", "initialize_hooks",)
